const pool = require("../db");

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤
 * –ü—Ä–∏–º–µ—Ä—ã: "60,500 Kms" -> "60,500", "10 km" -> "10", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" -> "0"
 */
function extractKilometers(kmString) {
    if (!kmString || typeof kmString !== 'string') {
        return '0';
    }
    
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ –∑–∞–ø—è—Ç—ã—Ö
    const cleaned = kmString.replace(/[^\d,]/g, '');
    
    if (!cleaned) {
        return '0';
    }
    
    return cleaned;
}

async function saveData(carDetails) {
    console.log("üîç –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:");
    console.log(JSON.stringify(carDetails, null, 2));
    
    if (!carDetails || !carDetails.short_url) {
        console.error("‚ùå –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ!");
        return;
    }


    console.log("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:");
    console.log(`   Host: ${process.env.DB_HOST}`);
    console.log(`   Port: ${process.env.DB_PORT}`);
    console.log(`   Database: ${process.env.DB_NAME}`);
    console.log(`   User: ${process.env.DB_USER}`);

    let client;
    try {
        client = await pool.connect();
        await client.query("BEGIN");

        const upsertCarQuery = `
            INSERT INTO car_listings (
                short_url, title, make, model, year, body_type, horsepower, fuel_type, 
                motors_trim, kilometers, price_formatted, price_raw, currency, 
                exterior_color, location, phone, seller_name, seller_type, seller_logo, seller_profile_link, main_image
            ) VALUES (
                $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, 
                $14, $15, $16, $17, $18, $19, $20, $21
            ) ON CONFLICT (short_url) DO UPDATE SET
                title = EXCLUDED.title,
                make = EXCLUDED.make,
                model = EXCLUDED.model,
                year = EXCLUDED.year,
                body_type = EXCLUDED.body_type,
                horsepower = EXCLUDED.horsepower,
                fuel_type = EXCLUDED.fuel_type,
                motors_trim = EXCLUDED.motors_trim,
                kilometers = EXCLUDED.kilometers,
                price_formatted = EXCLUDED.price_formatted,
                price_raw = EXCLUDED.price_raw,
                currency = EXCLUDED.currency,
                exterior_color = EXCLUDED.exterior_color,
                location = EXCLUDED.location,
                phone = EXCLUDED.phone,
                seller_name = EXCLUDED.seller_name,
                seller_type = EXCLUDED.seller_type,
                seller_logo = EXCLUDED.seller_logo,
                seller_profile_link = EXCLUDED.seller_profile_link,
                main_image = EXCLUDED.main_image
            RETURNING id;
        `;

        const values = [
            carDetails.short_url || null,
            carDetails.title || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.make || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.model || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.year || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.body_type || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.horsepower || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.fuel_type || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.motors_trim || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            extractKilometers(carDetails.kilometers), // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            carDetails.price_formatted || carDetails.price?.formatted || "0",
            carDetails.price_raw || carDetails.price?.raw || 0,
            carDetails.currency || carDetails.price?.currency || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.exterior_color || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.location || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            carDetails.phone || carDetails.contact?.phone || "–ù–µ —É–∫–∞–∑–∞–Ω",
            carDetails.seller_name || carDetails.sellers?.sellerName || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω",
            carDetails.seller_type || carDetails.sellers?.sellerType || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω",
            carDetails.seller_logo || carDetails.sellers?.sellerLogo || null,
            carDetails.seller_profile_link || carDetails.sellers?.sellerProfileLink || null,
            carDetails.main_image || null
        ];

        // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é
        console.log("üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î:");
        console.log(`   URL: ${values[0]}`);
        console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${values[1]}`);
        console.log(`   –ú–∞—Ä–∫–∞: ${values[2]}`);
        console.log(`   –ú–æ–¥–µ–ª—å: ${values[3]}`);
        console.log(`   –ì–æ–¥: ${values[4]}`);
        console.log(`   –¢–∏–ø –∫—É–∑–æ–≤–∞: ${values[5]}`);
        console.log(`   –ú–æ—â–Ω–æ—Å—Ç—å: ${values[6]}`);
        console.log(`   –¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞: ${values[7]}`);
        console.log(`   –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: ${values[8]}`);
        console.log(`   –ü—Ä–æ–±–µ–≥: ${values[9]}`);
        console.log(`   –¶–µ–Ω–∞ (—Ñ–æ—Ä–º–∞—Ç): ${values[10]}`);
        console.log(`   –¶–µ–Ω–∞ (—á–∏—Å–ª–æ): ${values[11]}`);
        console.log(`   –í–∞–ª—é—Ç–∞: ${values[12]}`);
        console.log(`   –¶–≤–µ—Ç: ${values[13]}`);
        console.log(`   –õ–æ–∫–∞—Ü–∏—è: ${values[14]}`);
        console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${values[15]}`);
        console.log(`   –ü—Ä–æ–¥–∞–≤–µ—Ü: ${values[16]}`);
        console.log(`   –¢–∏–ø –ø—Ä–æ–¥–∞–≤—Ü–∞: ${values[17]}`);
        console.log(`   –õ–æ–≥–æ—Ç–∏–ø: ${values[18]}`);
        console.log(`   –ü—Ä–æ—Ñ–∏–ª—å: ${values[19]}`);
        console.log(`   –ì–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ: ${values[20]}`);

        const res = await client.query(upsertCarQuery, values);
        const listingId = res.rows[0].id;
        console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –æ–± –∞–≤—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã (ID: ${listingId})`);

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ (–±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
        if (carDetails.photos && carDetails.photos.length > 0) {
            const insertPhotoQuery = `
                INSERT INTO car_photos (listing_id, photo_url) 
                VALUES ($1, $2)
                ON CONFLICT DO NOTHING;
            `;

            for (let photo of carDetails.photos) {
                await client.query(insertPhotoQuery, [listingId, photo]);
            }

            console.log(`üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${carDetails.photos.length} —Ñ–æ—Ç–æ –¥–ª—è ID: ${listingId}`);
        } else {
            console.warn(`‚ö†Ô∏è –ù–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è ID: ${listingId}`);
        }

        await client.query("COMMIT");
    } catch (error) {
        if (client) {
            try { await client.query("ROLLBACK"); } catch (_) {}
        }
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:", error.message);
        console.error("‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:", error);
        
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        if (error.message.includes('Connection terminated') || 
            error.message.includes('ECONNRESET') || 
            error.message.includes('ENOTFOUND')) {
            console.log("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...");
            try {
                // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
                await new Promise(resolve => setTimeout(resolve, 2000));
                return await saveData(carDetails); // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤
            } catch (retryError) {
                console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è:", retryError.message);
                throw retryError; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
            }
        }
        
        throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
    } finally {
        if (client) {
            try {
                client.release();
            } catch (releaseError) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:", releaseError.message);
            }
        }
    }
}

module.exports = { saveData };