#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã sources –∏ —Å–≤—è–∑–∏ —Å car_listings
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
 * 1. –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É sources
 * 2. –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ source_id –≤ car_listings
 * 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏
 * 4. –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–æ URL)
 */

const { databaseManager } = require('./database/database');

async function migrateToSources() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∫ –Ω–æ–≤–æ–π —Å—Ö–µ–º–µ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
        const tableStatus = await databaseManager.checkTables();
        console.log('–°—Ç–∞—Ç—É—Å —Ç–∞–±–ª–∏—Ü:', tableStatus);

        // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ sources –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ—ë
        if (!tableStatus.sources) {
            console.log('üîß –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É sources...');
            await databaseManager.initialize();
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏...');
        await databaseManager.initializeSources();

        // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ car_listings —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ source_id
        if (tableStatus.car_listings) {
            console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ source_id –≤ car_listings...');
            const client = await databaseManager.pool.connect();
            
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª–µ source_id
                const columnCheck = await client.query(`
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_name = 'car_listings' 
                    AND column_name = 'source_id'
                `);

                if (columnCheck.rows.length === 0) {
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ source_id
                    await client.query(`
                        ALTER TABLE car_listings 
                        ADD COLUMN source_id INT REFERENCES sources(id) ON DELETE SET NULL
                    `);
                    console.log('‚úÖ –ü–æ–ª–µ source_id –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ car_listings');

                    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—è
                    await client.query(`
                        CREATE INDEX IF NOT EXISTS idx_car_listings_source_id 
                        ON car_listings(source_id)
                    `);
                    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è source_id —Å–æ–∑–¥–∞–Ω');
                } else {
                    console.log('‚ÑπÔ∏è –ü–æ–ª–µ source_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
                }

                // –ü–æ–ø—ã—Ç–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ URL
                console.log('üîç –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π...');
                
                const updateResult = await client.query(`
                    UPDATE car_listings 
                    SET source_id = (
                        SELECT s.id 
                        FROM sources s 
                        WHERE car_listings.short_url LIKE '%' || s.name || '%'
                        LIMIT 1
                    )
                    WHERE source_id IS NULL
                `);

                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updateResult.rowCount} –∑–∞–ø–∏—Å–µ–π —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞`);

                // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
                const sourceStats = await client.query(`
                    SELECT s.name, s.display_name, COUNT(cl.id) as count
                    FROM sources s
                    LEFT JOIN car_listings cl ON s.id = cl.source_id
                    GROUP BY s.id, s.name, s.display_name
                    ORDER BY count DESC
                `);

                console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:');
                sourceStats.rows.forEach(row => {
                    console.log(`  ${row.display_name} (${row.name}): ${row.count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π`);
                });

            } finally {
                client.release();
            }
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
        const stats = await databaseManager.getStats();
        if (stats) {
            console.log(`  –í—Å–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${stats.totalSources}`);
            console.log(`  –í—Å–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ${stats.totalListings}`);
            console.log(`  –í—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${stats.totalPhotos}`);
            
            if (stats.sourceStats && stats.sourceStats.length > 0) {
                console.log('\n  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:');
                stats.sourceStats.forEach(source => {
                    console.log(`    ${source.display_name}: ${source.count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π`);
                });
            }
        }

        console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        console.log('\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:');
        console.log('  - –ü–æ–ª—É—á–∞—Ç—å –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∏—Å—Ç–æ—á–Ω–∏–∫—É');
        console.log('  - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º');
        console.log('  - –£–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        process.exit(1);
    } finally {
        await databaseManager.close();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
if (require.main === module) {
    migrateToSources()
        .then(() => {
            console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { migrateToSources };
