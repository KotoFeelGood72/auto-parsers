async function extractPhoneNumber(page) {
  let phoneNumber = "–ù–µ —É–∫–∞–∑–∞–Ω";

  try {
    console.log("üìû –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–∑–æ–≤–∞...");

    // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –ª–æ–∫–∞—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ "Call"
    const callButton = page.locator('[data-testid="call-cta-button"]').first();
    const callButtonCount = await callButton.count();

    if (callButtonCount === 0) {
      console.warn("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...");
      return phoneNumber;
    }

    console.log(`üìû –ù–∞–π–¥–µ–Ω–æ ${callButtonCount} –∫–Ω–æ–ø–æ–∫ –≤—ã–∑–æ–≤–∞. –ö–ª–∏–∫–∞–µ–º –ø–æ –ø–µ—Ä–≤–æ–π...`);

    let clicked = false;
    for (let attempt = 1; attempt <= 3; attempt++) {
      try {
        console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}...`);
        await callButton.scrollIntoViewIfNeeded();
        await page.waitForTimeout(2000);
        await callButton.click();
        clicked = true;
        console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ 'Call'");
        break;
      } catch (error) {
        console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å. –û—à–∏–±–∫–∞:`, error);
        await page.waitForTimeout(2000);
      }
    }

    if (!clicked) {
      console.error("üö® –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ 'Call' –¥–∞–∂–µ –∑–∞ 3 –ø–æ–ø—ã—Ç–∫–∏!");
      return phoneNumber;
    }

    console.log("‚åõ –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...");
    const modal = page.locator(".MuiDialog-container");
    await modal.waitFor({ state: "visible", timeout: 10000 });
    console.log("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ!");

    // –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneNumberLocator = modal.locator('[data-testid="phone-number"] p');
    await phoneNumberLocator.waitFor({ state: "visible", timeout: 15000 });

    // –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phoneNumber = await phoneNumberLocator.innerText();
    console.log(`üìû –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phoneNumber}`);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)
    const closeButton = modal.locator('[data-testid="close-button"]');
    if ((await closeButton.count()) > 0) {
      await closeButton.click();
      await page.waitForTimeout(2000);
      console.log("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ.");
    }

  } catch (error) {
    console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", error);
  }

  return phoneNumber;
}

module.exports = { extractPhoneNumber };