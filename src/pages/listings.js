async function* scrapeListings(browser) {
  let attempt = 0;

  while (attempt < 3) {
    const page = await browser.newPage();

    try {
      console.log("üîç –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞...");

      await page.setExtraHTTPHeaders({
        "User-Agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
      });

      let currentPage = 1;

      while (true) {
        const url = `https://www.autotraders.ae/used-cars/?page=${currentPage}`;
        console.log(`üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${url}`);

        await page.goto(url, { waitUntil: "domcontentloaded", timeout: 90000 });

        await page.waitForSelector("div.row.cars-cont div.col-md-3 > a", { timeout: 30000 });

        const carLinks = await page.$$eval("div.row.cars-cont div.col-md-3 > a", (elements) =>
          elements
            .map((el) => el.getAttribute("href"))
            .filter((href) => href && href.includes("/used-cars/"))
        );

        if (carLinks.length === 0) {
          console.log(`üèÅ –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${currentPage} –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π. –ó–∞–≤–µ—Ä—à–∞–µ–º.`);
          break;
        }

        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${carLinks.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${currentPage}`);

        for (const link of carLinks) {
          yield link.startsWith("http") ? link : `https://www.autotraders.ae${link}`;
        }

        console.log(`‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${currentPage + 1}`);
        currentPage++;
      }

      return;

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ (–ø–æ–ø—ã—Ç–∫–∞ ${attempt + 1}):`, error);
      attempt++;
      console.log("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...");
    } finally {
      await page.close();
      console.log("üõë –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞.");
    }
  }

  console.error("üö® –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã! –ü–∞—Ä—Å–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
}

module.exports = { scrapeListings };