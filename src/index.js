// const { scrapeListings } = require('./pages/listings');
// const { scrapeCarDetails } = require('./pages/details');
// const { saveData } = require('./utils/saveData');

// (async () => {
//     console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...');

//     let links;
//     try {
//         links = await scrapeListings();
//     } catch (error) {
//         console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:', error);
//         return;
//     }

//     if (!links || links.length === 0) {
//         console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å –ø–∞—Ä—Å–µ—Ä —Å–ø–∏—Å–∫–∞.');
//         return;
//     }

//     console.log(`üîó –ù–∞–π–¥–µ–Ω–æ ${links.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π. –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥...`);

//     for (const link of links) {
//         try {
//             if (!link || typeof link !== 'string') {
//                 console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞: URL –æ–±—ä—è–≤–ª–µ–Ω–∏—è undefined –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.');
//                 continue;
//             }

//             console.log(`üöó –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${link}`);
//             const carDetails = await scrapeCarDetails(link);
//             if (carDetails) {
//                 await saveData(carDetails);
//             }
//         } catch (error) {
//             console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${link}:`, error);
//         }
//     }

//     console.log('‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.');
// })();

const { scrapeListings } = require("./pages/listings");
const { scrapeCarDetails } = require("./pages/details");
const { saveData } = require("./utils/saveData");

(async () => {
    console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...");

    try {
        for await (const link of scrapeListings()) { // üî• –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –ø–æ –æ–¥–Ω–æ–π
            console.log(`üöó –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${link}`);
            try {
                const carDetails = await scrapeCarDetails(link);
                if (carDetails) {
                    await saveData(carDetails);
                }
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${link}:`, error);
            }
        }
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–µ—Ä–∞:", error);
    }

    console.log("‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.");
})();