const { BaseParser } = require('../../BaseParser');
const { OpenSooqListingParser } = require('./entities/listing');
const { OpenSooqDetailParser } = require('./entities/detail');
const { saveData } = require('../../../utils/saveData');

/**
 * –ü–∞—Ä—Å–µ—Ä –¥–ª—è —Å–∞–π—Ç–∞ OpenSooq.com
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä—Å–µ—Ä–∞–º–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ –∏ –¥–µ—Ç–∞–ª–µ–π
 */
class OpenSooqParser extends BaseParser {
    constructor(config) {
        super('OpenSooq', {
            baseUrl: 'https://ae.opensooq.com',
            listingsUrl: 'https://ae.opensooq.com/en/cars/cars-for-sale',
            timeout: 90000,
            delayBetweenRequests: 2000,
            maxRetries: 3,
            retryDelay: 5000,
            enableImageLoading: false,
            ...config
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä—ã
        this.listingParser = new OpenSooqListingParser(this.config);
        this.detailParser = new OpenSooqDetailParser(this.config);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
     */
    async* getListings() {
        yield* this.listingParser.getListings(this.context);
    }

    /**
     * –ü–∞—Ä—Å–∏–Ω–≥ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏
     */
    async parseListing(url) {
        return await this.detailParser.parseCarDetails(url, this.context);
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞
     */
    async run() {
        const results = [];
        
        try {
            console.log(`üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä ${this.name}...`);
            
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏ –ø–∞—Ä—Å–∏–º –∫–∞–∂–¥–æ–µ
            for await (const listingUrl of this.getListings()) {
                console.log(`üöó –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${listingUrl}`);
                
                try {
                    const carDetails = await this.parseListing(listingUrl);
                    if (carDetails) {
                        results.push(carDetails);
                        
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
                        await this.saveData(carDetails);
                    }
                } catch (error) {
                    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${listingUrl}:`, error);
                }
            }
            
            console.log(`‚úÖ –ü–∞—Ä—Å–µ—Ä ${this.name} –∑–∞–≤–µ—Ä—à–µ–Ω. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${results.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π`);
            return results;
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –ø–∞—Ä—Å–µ—Ä–µ ${this.name}:`, error.message);
            throw error;
        } finally {
            await this.cleanup();
        }
    }

    /**
     * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
     */
    normalizeData(rawData) {
        return {
            short_url: rawData.short_url || null,
            title: rawData.title || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            make: rawData.make || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            model: rawData.model || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            year: rawData.year || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            body_type: rawData.body_type || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            horsepower: rawData.horsepower || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            fuel_type: rawData.fuel_type || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            motors_trim: rawData.motors_trim || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            kilometers: parseInt(rawData.kilometers, 10) || 0,
            price_formatted: rawData.price?.formatted || "0",
            price_raw: rawData.price?.raw || 0,
            currency: rawData.price?.currency || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            exterior_color: rawData.exterior_color || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            location: rawData.location || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            phone: rawData.contact?.phone || "–ù–µ —É–∫–∞–∑–∞–Ω",
            seller_name: rawData.sellers?.sellerName || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω",
            seller_type: rawData.sellers?.sellerType || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω",
            seller_logo: rawData.sellers?.sellerLogo || null,
            seller_profile_link: rawData.sellers?.sellerProfileLink || null,
            main_image: rawData.main_image || null,
            photos: rawData.photos || []
        };
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É
     */
    async saveData(carDetails) {
        try {
            const normalizedData = this.normalizeData(carDetails);
            await saveData(normalizedData);
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:`, error.message);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ä—Å–µ—Ä–µ
     */
    getInfo() {
        return {
            name: this.name,
            baseUrl: this.config.baseUrl,
            listingsUrl: this.config.listingsUrl,
            timeout: this.config.timeout
        };
    }
}

module.exports = { OpenSooqParser };