/**
 * –ü–∞—Ä—Å–∏–Ω–≥ –¥–µ—Ç–∞–ª–µ–π –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è OneClickDrive.com
 */

class OneclickdriveDetailParser {
    constructor(config) {
        this.config = config;
    }

    /**
     * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
     */
    async safeEval(page, selector, callback) {
        try {
            return await page.$eval(selector, callback);
        } catch (error) {
            return null;
        }
    }

    /**
     * –ü–∞—Ä—Å–∏–Ω–≥ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏
     */
    async parseCarDetails(url, context) {
        const page = await context.newPage();
        
        try {
            console.log(`üöó –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ ${url}`);

            await page.goto(url, {
                waitUntil: "domcontentloaded",
                timeout: this.config.timeout,
            });

            console.log("üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...");

            // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            const title = await this.safeEval(page, "h1.dsktit", el => el.textContent.trim());
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
            const specsData = await page.$$eval('.priceingdt', elements => {
                const data = {};
                elements.forEach(el => {
                    const labelSpan = el.querySelector('span:first-child');
                    const valueElement = el.querySelector('.text-right');
                    
                    if (labelSpan && valueElement) {
                        const label = labelSpan.textContent.trim().toLowerCase();
                        const value = valueElement.textContent.trim();
                        
                        if (label.includes('make')) data.make = value;
                        else if (label.includes('model')) data.model = value;
                        else if (label.includes('driven')) data.driven = value;
                        else if (label.includes('body type')) data.bodyType = value;
                        else if (label.includes('gearbox')) data.gearbox = value;
                        else if (label.includes('fuel type')) data.fuelType = value;
                        else if (label.includes('seller type')) data.sellerType = value;
                        else if (label.includes('exterior')) data.exteriorColor = value;
                    }
                });
                return data;
            });

            const make = specsData.make || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            const model = specsData.model || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            const year = "2023"; // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–ª–∏ breadcrumb
            const bodyType = specsData.bodyType || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            const motorsTrim = specsData.gearbox || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            const fuelType = specsData.fuelType || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∏–ª–æ–º–µ—Ç—Ä—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            const kilometers = specsData.driven || "0";

            const exteriorColor = specsData.exteriorColor || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            const location = await this.safeEval(page, ".dtlloc", el => el.textContent.replace(/\s+/g, " ").trim());

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω—ã
            const priceFormatted = await this.safeEval(page, ".mainprice", el => el.textContent.replace(/[^\d,]/g, "").trim());
            const priceRaw = priceFormatted ? parseFloat(priceFormatted.replace(/,/g, "")) : null;
            const currency = "AED";

            // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            const photos = await page.$$eval(".collage-slide-images img.imagegal", imgs => 
                imgs.map(img => img.src).filter(src => src)
            );

            // –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ)
            const mainImage = photos && photos.length > 0 ? photos[0] : null;

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–≤—Ü–µ
            const sellerName = await this.safeEval(page, ".cmpbrndlogo", img => img.getAttribute("title"));
            const sellerType = specsData.sellerType || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
            const sellerLogo = await this.safeEval(page, ".cmpbrndlogo", el => el.src);
            const sellerProfileLink = await this.safeEval(page, ".moredealer", el => el.href);

            // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            const phoneNumber = await this.safeEval(page, ".callnwbtn", el => el.textContent.trim());

            // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
            const carDetails = {
                short_url: url,
                title: title || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                photos: photos || [],
                main_image: mainImage,
                make: make || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                model: model || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                year: year || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                body_type: bodyType || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                horsepower: null, // –ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ
                fuel_type: fuelType || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                motors_trim: motorsTrim || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                kilometers: kilometers || 0,
                // –ü–ª–æ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ü–µ–Ω
                price_formatted: priceFormatted || "0",
                price_raw: priceRaw || 0,
                currency: currency,
                exterior_color: exteriorColor || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                location: location || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                // –ü–ª–æ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                phone: phoneNumber || "–ù–µ —É–∫–∞–∑–∞–Ω",
                // –ü–ª–æ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞
                seller_name: sellerName || "–ù–µ —É–∫–∞–∑–∞–Ω",
                seller_type: sellerType || "–ß–∞—Å—Ç–Ω–æ–µ –ª–∏—Ü–æ",
                seller_logo: sellerLogo || null,
                seller_profile_link: sellerProfileLink || null,
            };

            console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã –¥–ª—è: ${title}`);
            return carDetails;

        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å ${url}:`, error);
            return null;
        } finally {
            await page.close();
        }
    }
}

module.exports = { OneclickdriveDetailParser };

