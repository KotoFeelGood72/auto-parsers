/**
 * –ü–∞—Ä—Å–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è OneClickDrive.com
 */

class OneclickdriveListingParser {
    constructor(config) {
        this.config = config;
        
        // –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ –º–∞—à–∏–Ω
        this.listingSelector = '.gallery-img-link';
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
     */
    async* getListings(context) {
        let currentPage = 1;
        let processedLinks = new Set(); // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞

        while (true) {
            const page = await context.newPage();
            let pageError = false;

            try {
                console.log("üîç –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ OneClickDrive...");

                while (true) {
                    try {
                        // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º page
                        const separator = this.config.listingsUrl.includes('?') ? '&' : '?';
                        const url = `${this.config.listingsUrl}${separator}page=${currentPage}`;
                        console.log(`üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${currentPage}: ${url}`);

                        await page.goto(url, { 
                            waitUntil: "domcontentloaded", 
                            timeout: this.config.timeout 
                        });

                        // –ñ–¥—ë–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω
                        await page.waitForSelector(
                            this.listingSelector, 
                            { timeout: 30000 }
                        );

                        const carLinks = await page.$$eval(
                            this.listingSelector, 
                            (elements, baseUrl) =>
                                elements
                                    .map((el) => el.getAttribute("href"))
                                    .filter((href) => href && href.startsWith(baseUrl)),
                            this.config.baseUrl
                        );

                        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${carLinks.length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${currentPage}`);

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
                        let newLinksFound = 0;
                        for (const link of carLinks) {
                            if (!processedLinks.has(link)) {
                                processedLinks.add(link);
                                yield link;
                                newLinksFound++;
                            }
                        }

                        console.log(`üìå –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ${newLinksFound} (–≤—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: ${processedLinks.size})`);

                        // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫, –∑–Ω–∞—á–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –∏–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è
                        if (newLinksFound === 0) {
                            console.log("‚ö†Ô∏è –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ...");
                        }

                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        const hasNextPage = await page.$('.paginationdesign a.nextbtn');
                        if (!hasNextPage) {
                            console.log("üèÅ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥.");
                            break;
                        }

                        currentPage++;
                        
                        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
                        await new Promise(resolve => setTimeout(resolve, this.config.delayBetweenRequests));

                    } catch (pageError) {
                        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${currentPage}:`, pageError.message);
                        // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
                        pageError = true;
                        break;
                    }
                }

                // –ï—Å–ª–∏ –≤—Å–µ –æ–∫ –∏–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤—ã—Ö–æ–¥–∏–º
                await page.close();
                return;

            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π:`, error.message);
                pageError = true;
            } finally {
                try {
                    await page.close();
                } catch (e) {
                    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                }
            }

            // –ï—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ –∏ –º—ã –Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é
            if (pageError) {
                console.log("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π...");
                currentPage++;
                
                // –ó–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
                if (currentPage > 100) {
                    console.log("üö® –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥.");
                    break;
                }
            }
        }

        console.log(`‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω. –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ${processedLinks.size}`);
    }
}

module.exports = { OneclickdriveListingParser };

