#!/usr/bin/env node

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 */

const { databaseManager } = require('./src/database/database');

async function testSourcesSystem() {
    console.log('üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...\n');
    
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
        await databaseManager.initialize();
        await databaseManager.initializeSources();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞\n');

        // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
        console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü...');
        const tableStatus = await databaseManager.checkTables();
        console.log('–°—Ç–∞—Ç—É—Å —Ç–∞–±–ª–∏—Ü:', tableStatus);
        
        if (!tableStatus.allTablesExist) {
            throw new Error('–ù–µ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã');
        }
        console.log('‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç\n');

        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...');
        const sources = await databaseManager.getActiveSources();
        console.log(`–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${sources.length}`);
        sources.forEach(source => {
            console.log(`  - ${source.display_name} (${source.name})`);
        });
        console.log('‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã\n');

        // 4. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏
        console.log('4Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏...');
        const dubizzleSource = await databaseManager.getSourceByName('dubizzle');
        if (dubizzleSource) {
            console.log(`‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ Dubizzle –Ω–∞–π–¥–µ–Ω: ID ${dubizzleSource.id}`);
        } else {
            console.log('‚ö†Ô∏è –ò—Å—Ç–æ—á–Ω–∏–∫ Dubizzle –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }

        // 5. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É
        console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É...');
        const listings = await databaseManager.getListingsBySource('dubizzle', 5);
        console.log(`–ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å Dubizzle: ${listings.length}`);
        
        if (listings.length > 0) {
            console.log('–ü—Ä–∏–º–µ—Ä—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π:');
            listings.slice(0, 3).forEach((listing, index) => {
                console.log(`  ${index + 1}. ${listing.title}`);
                console.log(`     –ò—Å—Ç–æ—á–Ω–∏–∫: ${listing.source_display_name}`);
                console.log(`     –¶–µ–Ω–∞: ${listing.price_formatted}`);
            });
        } else {
            console.log('‚ÑπÔ∏è –ù–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞ Dubizzle');
        }

        // 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        console.log('\n6Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        const stats = await databaseManager.getStats();
        if (stats) {
            console.log(`–í—Å–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${stats.totalSources}`);
            console.log(`–í—Å–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ${stats.totalListings}`);
            console.log(`–í—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${stats.totalPhotos}`);
            
            if (stats.sourceStats && stats.sourceStats.length > 0) {
                console.log('\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:');
                stats.sourceStats.forEach(source => {
                    console.log(`  ${source.display_name}: ${source.count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π`);
                });
            }
        }

        // 7. –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        console.log('\n7Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞...');
        const testSource = await databaseManager.addSource({
            name: 'test_source',
            display_name: 'Test Source',
            base_url: 'https://test.com',
            is_active: true
        });
        
        if (testSource) {
            console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω: ID ${testSource.id}`);
            
            // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫
            const client = await databaseManager.pool.connect();
            await client.query('DELETE FROM sources WHERE id = $1', [testSource.id]);
            client.release();
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —É–¥–∞–ª–µ–Ω');
        }

        console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        console.log('\n–°–∏—Å—Ç–µ–º–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
        console.log('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
        console.log('  - node src/demo_sources.js - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã');
        console.log('  - node run_migration.js - –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è');
        console.log('  - node src/index.js - –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–æ–≤');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        process.exit(1);
    } finally {
        await databaseManager.close();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
if (require.main === module) {
    testSourcesSystem()
        .then(() => {
            console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { testSourcesSystem };
