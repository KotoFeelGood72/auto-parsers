const { ParserModuleManager } = require('./src/parsers/ModuleManager');
const { saveData } = require('./src/utils/saveData');
const { startBrowser } = require('./src/utils/browser');

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
async function runCyclicParsing() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥...');
    
    let browser = null;
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä
        console.log('üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä...');
        browser = await startBrowser();
        const context = await browser.newContext();
        
        // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥—É–ª–µ–π
        const moduleManager = new ParserModuleManager();
        
        // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±—Ä–∞—É–∑–µ—Ä–∞ –≤ –º–æ–¥—É–ª–∏
        for (const [name, module] of moduleManager.modules) {
            module.context = context;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª—è—Ö
        console.log('\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª—è—Ö:');
        const modulesInfo = moduleManager.getModulesInfo();
        for (const [name, info] of Object.entries(modulesInfo)) {
            console.log(`   ${name}: ${info.baseUrl} (–º–∞–∫—Å. —Å—Ç—Ä–∞–Ω–∏—Ü: ${info.maxPages})`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π...');
        const availability = await moduleManager.checkAvailability();
        for (const [name, isAvailable] of Object.entries(availability)) {
            console.log(`   ${name}: ${isAvailable ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥
        console.log('\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥...');
        let totalProcessed = 0;
        
        for await (const result of moduleManager.runCyclicParsing(2)) { // 2 –∏—Ç–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
            console.log(`\nüìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥—É–ª—è ${result.module}:`);
            console.log(`   URL: ${result.url}`);
            console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${result.data.title}`);
            console.log(`   –¶–µ–Ω–∞: ${result.data.price_formatted}`);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
            try {
                await saveData(result.data);
                totalProcessed++;
                console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (–≤—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${totalProcessed})`);
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:`, error.message);
            }
        }
        
        console.log(`\nüéâ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${totalProcessed} –æ–±—ä—è–≤–ª–µ–Ω–∏–π`);
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    } finally {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        if (browser) {
            console.log('üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
            await browser.close();
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
if (require.main === module) {
    runCyclicParsing().catch(console.error);
}

module.exports = { runCyclicParsing };
